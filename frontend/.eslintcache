[{"E:\\Test_Task_Yellow\\frontend\\src\\index.js":"1","E:\\Test_Task_Yellow\\frontend\\src\\App.js":"2","E:\\Test_Task_Yellow\\frontend\\src\\reportWebVitals.js":"3","E:\\Test_Task_Yellow\\frontend\\src\\components\\NotFound.jsx":"4","E:\\Test_Task_Yellow\\frontend\\src\\components\\SignIn.jsx":"5","E:\\Test_Task_Yellow\\frontend\\src\\components\\User.jsx":"6","E:\\Test_Task_Yellow\\frontend\\src\\actions\\authAction.js":"7","E:\\Test_Task_Yellow\\frontend\\src\\components\\ModalError.jsx":"8","E:\\Test_Task_Yellow\\frontend\\src\\reducers\\index.js":"9","E:\\Test_Task_Yellow\\frontend\\src\\reducers\\auth.js":"10","E:\\Test_Task_Yellow\\frontend\\src\\components\\Register.jsx":"11"},{"size":895,"mtime":1609963296763,"results":"12","hashOfConfig":"13"},{"size":778,"mtime":1609964188983,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":230,"mtime":1609963662084,"results":"16","hashOfConfig":"13"},{"size":4197,"mtime":1609964910737,"results":"17","hashOfConfig":"13"},{"size":1239,"mtime":1609963604110,"results":"18","hashOfConfig":"13"},{"size":523,"mtime":1609962914186,"results":"19","hashOfConfig":"13"},{"size":781,"mtime":1609962611165,"results":"20","hashOfConfig":"13"},{"size":118,"mtime":1609962701002,"results":"21","hashOfConfig":"13"},{"size":1045,"mtime":1609963312221,"results":"22","hashOfConfig":"13"},{"size":4602,"mtime":1609964218548,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gnjrhs",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Test_Task_Yellow\\frontend\\src\\index.js",[],"E:\\Test_Task_Yellow\\frontend\\src\\App.js",["49","50"],"E:\\Test_Task_Yellow\\frontend\\src\\reportWebVitals.js",[],["51","52"],"E:\\Test_Task_Yellow\\frontend\\src\\components\\NotFound.jsx",[],"E:\\Test_Task_Yellow\\frontend\\src\\components\\SignIn.jsx",["53","54","55"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport ModalError from \"./ModalError\";\r\nimport { Container, Col, Row, Form, Button } from \"react-bootstrap\";\r\nimport \"../styles/form.css\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { submitLogin } from \"../actions/authAction\";\r\n\r\nconst SignIn = ({ isLoggedIn, message }) => {\r\n  const dispatch = useDispatch();\r\n  const [show, setShow] = useState(false);\r\n  const [errorM, setErrorM] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  const {\r\n    values,\r\n    handleSubmit,\r\n    submitCount,\r\n    getFieldProps,\r\n    setValues,\r\n    touched,\r\n    errors,\r\n    setFieldValue,\r\n  } = useFormik({\r\n    initialValues: {\r\n      clientId: \"1\",\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validate() {\r\n      const errors = {};\r\n      if (touched.email && !values.email) {\r\n        errors.email = \"Required\";\r\n      } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n      ) {\r\n        errors.email = \"Invalid email address\";\r\n      }\r\n      if (touched.password && !values.password) {\r\n        errors.password = \"Required\";\r\n      } else if (values.password.length <= 3) {\r\n        errors.password = \"Must be more than 3 characters\";\r\n      }\r\n      return errors;\r\n    },\r\n    onSubmit: (values) => {\r\n      dispatch(submitLogin(JSON.stringify(values, null, 2)));\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    isLoggedIn ? history.push(\"/user\") : localStorage.removeItem(\"accessToken\");\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      const err = (message && message.message) || message.password.message;\r\n      setErrorM(err);\r\n      setShow(true);\r\n    }\r\n  }, [message]);\r\n\r\n  const toRegister = () => {\r\n    history.push(\"/register\");\r\n  };\r\n\r\n  const body = (\r\n    <Container fluid=\"md\">\r\n      <Row>\r\n        <Col className=\"colForm\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Enter email\"\r\n                {...getFieldProps(\"email\")}\r\n                required\r\n                isValid={touched[\"email\"] && !errors[\"email\"]}\r\n                isInvalid={!!errors[\"email\"]}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors[\"email\"]}\r\n              </Form.Control.Feedback>\r\n              <Form.Text className=\"text-muted\">\r\n                We'll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                {...getFieldProps(\"password\")}\r\n                placeholder=\"Password\"\r\n                isValid={touched[\"password\"] && !errors[\"password\"]}\r\n                isInvalid={\r\n                  !!errors[\"password\"] || (message && message[\"password\"])\r\n                }\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors[\"password\"]}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Login\r\n            </Button>\r\n\r\n            <br />\r\n          </Form>\r\n          <Row>\r\n            <Col>\r\n            <br />\r\n            <div>Dont have account? </div>\r\n            <Button variant=\"primary\" onClick={toRegister}>\r\n              Register\r\n            </Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {body}\r\n      <ModalError\r\n        show={show}\r\n        setShow={setShow}\r\n        message={errorM}\r\n        setErrorM={setErrorM}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn, message } = state.auth;\r\n  return {\r\n    isLoggedIn,\r\n    message,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(SignIn);\r\n","E:\\Test_Task_Yellow\\frontend\\src\\components\\User.jsx",["56"],"E:\\Test_Task_Yellow\\frontend\\src\\actions\\authAction.js",["57"],"export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\nexport const GET_PROFILE = \"GET_PROFILE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\nfunction userLoggedIn(data) {\r\n\r\n}\r\n\r\nexport function submitLogin(data) {\r\n  return (dispatch) => {\r\n   \r\n  };\r\n}\r\nexport function getProfile() {\r\n  return (dispatch) => {\r\n \r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return (dispatch) => {\r\n   \r\n  };\r\n}\r\n\r\nexport const clearMessage = () => ({\r\n});\r\n","E:\\Test_Task_Yellow\\frontend\\src\\components\\ModalError.jsx",[],"E:\\Test_Task_Yellow\\frontend\\src\\reducers\\index.js",[],"E:\\Test_Task_Yellow\\frontend\\src\\reducers\\auth.js",["58"],"E:\\Test_Task_Yellow\\frontend\\src\\components\\Register.jsx",["59","60","61","62","63"],{"ruleId":"64","severity":1,"message":"65","line":3,"column":50,"nodeType":"66","messageId":"67","endLine":3,"endColumn":58},{"ruleId":"64","severity":1,"message":"68","line":4,"column":8,"nodeType":"66","messageId":"67","endLine":4,"endColumn":12},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"64","severity":1,"message":"73","line":19,"column":5,"nodeType":"66","messageId":"67","endLine":19,"endColumn":16},{"ruleId":"64","severity":1,"message":"74","line":21,"column":5,"nodeType":"66","messageId":"67","endLine":21,"endColumn":14},{"ruleId":"64","severity":1,"message":"75","line":24,"column":5,"nodeType":"66","messageId":"67","endLine":24,"endColumn":18},{"ruleId":"76","severity":1,"message":"77","line":11,"column":6,"nodeType":"78","endLine":11,"endColumn":18,"suggestions":"79"},{"ruleId":"64","severity":1,"message":"80","line":7,"column":10,"nodeType":"66","messageId":"67","endLine":7,"endColumn":22},{"ruleId":"81","severity":1,"message":"82","line":8,"column":1,"nodeType":"83","endLine":45,"endColumn":2},{"ruleId":"64","severity":1,"message":"84","line":8,"column":10,"nodeType":"66","messageId":"67","endLine":8,"endColumn":21},{"ruleId":"64","severity":1,"message":"85","line":11,"column":9,"nodeType":"66","messageId":"67","endLine":11,"endColumn":17},{"ruleId":"64","severity":1,"message":"73","line":19,"column":5,"nodeType":"66","messageId":"67","endLine":19,"endColumn":16},{"ruleId":"64","severity":1,"message":"74","line":21,"column":5,"nodeType":"66","messageId":"67","endLine":21,"endColumn":14},{"ruleId":"64","severity":1,"message":"75","line":24,"column":5,"nodeType":"66","messageId":"67","endLine":24,"endColumn":18},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"'submitCount' is assigned a value but never used.","'setValues' is assigned a value but never used.","'setFieldValue' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["88"],"'userLoggedIn' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'submitLogin' is defined but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [dispatch, history, isLoggedIn]",{"range":"91","text":"92"},[472,484],"[dispatch, history, isLoggedIn]"]